MODA<-function(X)     #Crea una función llamada MODA#
{
y<-scan(X)   	      #Lee los datos#        
n<-length(y)	      #Crea una variable n igual a longitud del vector de datos#
z<-rep(0,n)           #Crea un vector de ceros con la misma longitud del vector de observaciones# 
for (j in 1:n)        #Crea un contador que va desde la primera observación#
{cont=0               #Inicia el contador en cero#
 for (i in 1:n-1)     #Crea otro contador desde la primera hasta la penúltima observación#
                {if(y[j]==y[i+1])    #Si la primera observación es igual a alguna de las demás# 
                                {cont=cont+1 #Suma uno al contador por cada par de observaciones iguales#
                                 z[j]<-cont}  #Crea el vector de contadores con las frecuencias#
                 }
}
z                                            #Vector de frecuencias#                                    
w<-rep(0,n)                                  #Crea un vector de ceros con la misma longitud del vector de observaciones#                        
w<-z                                         #Le asigna a la variable w el vector z#
i<-1                                         #Crea un contador que va desde la primera frecuencia#
while (i<=(n-1)) 			     #Sigue el procedimiento hasta la penúltima frecuencia#
if(w[i]<w[i+1])                              #Si la frecuencia anterior es menor que la siguiente#
               {a<-w[i+1]                    #Crea una variable a igual a la frecuencia siguiente#  
                b<-w[i] 		     #Crea una variable a igual a la frecuencia anterior#  
                w[i]<-a  		     #Cambia la posición de las frecuencias#
                w[i+1]<-b
                i<-1}			     #Reinicia el proceso#
                else                         #De lo contrario#
                i<-i+1                       #El contador continua #
                w                            #Imprime el vector de frecuencias organizado de manera descendente#
                max<-w[1]		     #Crea la variable max a la cual se le da el valor de la primera frecuencia en el vector de frecuencias organizado#
max					     #Imprime max#

m<-rep(0,n)				     #Crea un vector de ceros con la misma longitud del vector de observaciones#
 for (i in 1:n)                              #Crea un contador desde 1 hasta la longitud del vector de observaciones#
          {if(z[i]==max)                     #Compara los valores del vector de frecuencias organizados con max#
           {m[i]<-y[i]			     #Si se cumple lo anterior coloca la observación correspondiente a esa frecuencia en la posición i del vector m#
           }
           else			             #De lo contrario le asigna a la posición NA#
           m[i]<-NA
           }
m					     #Imprime m#
m1 <- m[!is.na(m)]			     #Elimina los NA del vector m y lo renombra m1#
m1					     #Imprime m1#


p<-length(m1)				      #Crea una variable p igual a longitud del vector m1#

p					      #Imprime p#
m2<-rep(0,p)                                  #Crea un vector de ceros con la misma longitud del vector m1#                        
m2<-m1                                        #Le asigna a la variable m2 el vector m1#
i<-1                                          #Crea un contador que va desde 1#
while (i<=(p-1)) 			      #Sigue el procedimiento hasta el penultimo valor en m1#
if(m2[i]<m2[i+1])                             #Si la frecuencia anterior es menor que la siguiente#
               {c<-m2[i+1]                    #Crea una variable c igual a la observación siguiente#  
                d<-m2[i] 		      #Crea una variable d igual a la observación anterior#  
                m2[i]<-c  		      #Cambia la posición de las observaciones#
                m2[i+1]<-d
                i<-1}			      #Reinicia el proceso#
                else                          #De lo contrario#
                i<-i+1                        #El contador continua #
                m2                            #Imprime el vector de observaciones organizado de manera descendente#
cont1=1					      #Crea un contador que nicia en 1#
i<-1                              
while(i<p)                                    #Cuando el contador sea menor que la longitud del vector m2#
if (m2[i]!=m2[i+1])                           #Compara las observaciones consecutivas y si son diferentes#
          {cont1=cont1+1		      #a contador le agrega 1#
             i<-i+1}			      #Reinicia el proceso#
else  i<-i+1                                  #De lo contrario sigue el proceso#  
cont1					      #Imprime cont1#


moda<-rep(0,p-1)                             #Crea un vector de ceros con la misma longitud del vector de observaciones menos 1# 
moda[1]<-m2[1]                               #Le asigna a la observación 1 del vector moda la observación 1 del vector m2#
i<-2                                         #Crea un contador que va desde la segunda observación#
while (i<=(p-1)) 			     #Sigue el procedimiento hasta la penúltima observación#
if(m2[i]!=m2[i+1])                           #Si la observación anterior es menor que la siguiente#
               {moda[i]<-m2[i+1]	     #Asigna a moda[i] la observación siguiente en m2#	
               i<-i+1}			     #Reinicia el proceso#
                else 			     #De lo contrario# 
               { moda[i]<-NA 		     #le asigna a moda[i] NA#
                i<-i+1}                      #El contador continua #
                   
	moda1 <- moda[!is.na(moda)]          #Elimina los NA del vector moda y lo renombra moda1#
 	  moda1				     #Imprime moda1 la moda#
}















                  	   